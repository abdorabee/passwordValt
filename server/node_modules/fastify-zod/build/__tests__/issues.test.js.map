{"version":3,"file":"issues.test.js","names":["test","productInput","title","z","string","price","number","content","optional","productGenerated","id","createdAt","updatedAt","createProductSchema","object","productResponseSchema","productsResponseSchema","array","buildJsonSchemas","userCoreSchema","email","required_error","invalid_type_error","name","createUserSchema","password","createUserResponseSchema","loginSchema","loginResponseSchema","accessToken","Name","kind","literal","lastName","Address","street","postcode","UserDetails","union","Unknown","unknown","jsonSchemas","f","register","fastify","zod","get","operationId","querystring","reply","query","inject","method","url","then","res","json","expect","toEqual","error","message","statusCode","address"],"sources":["../../src/__tests__/issues.test.ts"],"sourcesContent":["import fastify from \"fastify\";\nimport { z } from \"zod\";\n\nimport { buildJsonSchemas, register } from \"..\";\n\ntest(`fix #8`, () => {\n  const productInput = {\n    title: z.string(),\n    price: z.number(),\n    content: z.string().optional(),\n  };\n\n  const productGenerated = {\n    id: z.number(),\n    createdAt: z.string(),\n    updatedAt: z.string(),\n  };\n\n  const createProductSchema = z.object({\n    ...productInput,\n  });\n\n  const productResponseSchema = z.object({\n    ...productInput,\n    ...productGenerated,\n  });\n\n  const productsResponseSchema = z.array(productResponseSchema);\n\n  buildJsonSchemas({\n    createProductSchema,\n    productResponseSchema,\n    productsResponseSchema,\n  });\n\n  const userCoreSchema = {\n    email: z\n      .string({\n        required_error: `Email is required`,\n        invalid_type_error: `Email must be a string`,\n      })\n      .email(),\n    name: z.string(),\n  };\n\n  const createUserSchema = z.object({\n    ...userCoreSchema,\n    password: z.string({\n      required_error: `Password is required`,\n      invalid_type_error: `Password must be a string`,\n    }),\n  });\n\n  const createUserResponseSchema = z.object({\n    ...userCoreSchema,\n    id: z.number(),\n  });\n\n  const loginSchema = z.object({\n    email: z\n      .string({\n        required_error: `Email is required`,\n        invalid_type_error: `Email must be a string`,\n      })\n      .email(),\n    password: z.string(),\n  });\n\n  const loginResponseSchema = z.object({\n    accessToken: z.string(),\n  });\n\n  buildJsonSchemas({\n    createUserSchema,\n    createUserResponseSchema,\n    loginSchema,\n    loginResponseSchema,\n  });\n});\n\ntest(`fix #14, #17`, async () => {\n  const Name = z.object({\n    kind: z.literal(`name`),\n    name: z.string(),\n    lastName: z.string(),\n  });\n\n  const Address = z.object({\n    kind: z.literal(`address`),\n    street: z.string(),\n    postcode: z.string(),\n  });\n\n  const UserDetails = z.union([Name, Address]);\n\n  const Unknown = z.unknown();\n\n  const jsonSchemas = buildJsonSchemas({ UserDetails, Unknown }, {});\n\n  const f = register(fastify(), {\n    jsonSchemas,\n  });\n\n  f.zod.get(\n    `/`,\n    {\n      operationId: `getUserDetails`,\n      querystring: `UserDetails`,\n      reply: `UserDetails`,\n    },\n    async ({ query }) => query,\n  );\n\n  const name = await f\n    .inject({ method: `get`, url: `/`, query: { kind: `name` } })\n    .then((res) => res.json());\n\n  expect(name).toEqual({\n    error: `Bad Request`,\n    message: `querystring should have required property 'name', querystring.kind should be equal to constant, querystring should match some schema in anyOf`,\n    statusCode: 400,\n  });\n\n  const address = await f\n    .inject({ method: `get`, url: `/`, query: { kind: `address` } })\n    .then((res) => res.json());\n\n  expect(address).toEqual({\n    error: `Bad Request`,\n    message: `querystring.kind should be equal to constant, querystring should have required property 'street', querystring should match some schema in anyOf`,\n    statusCode: 400,\n  });\n});\n"],"mappings":"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"}