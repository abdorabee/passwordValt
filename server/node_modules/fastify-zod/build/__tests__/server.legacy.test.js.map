{"version":3,"file":"server.legacy.test.js","names":["test","f","createLegacyTestServer","expect","inject","method","url","then","res","json","resolves","toEqual","todoItems","payload","error","message","statusCode","id","label","state","dueDateMs","Date","getTime"],"sources":["../../src/__tests__/server.legacy.test.ts"],"sourcesContent":["import { createLegacyTestServer } from \"./server.legacy.fixtures\";\n\ntest(`server.legacy`, async () => {\n  const f = createLegacyTestServer({}, {}, {});\n\n  await expect(\n    f\n      .inject({\n        method: `get`,\n        url: `/item`,\n      })\n      .then((res) => res.json()),\n  ).resolves.toEqual({ todoItems: [] });\n\n  await expect(\n    f\n      .inject({\n        method: `post`,\n        url: `/item`,\n        payload: {},\n      })\n      .then((res) => res.json()),\n  ).resolves.toEqual({\n    error: `Bad Request`,\n    message: `body should have required property 'id'`,\n    statusCode: 400,\n  });\n\n  await expect(\n    f\n      .inject({\n        method: `post`,\n        url: `/item`,\n        payload: {\n          id: 1337,\n        },\n      })\n      .then((res) => res.json()),\n  ).resolves.toEqual({\n    error: `Bad Request`,\n    message: `body.id should match format \"uuid\"`,\n    statusCode: 400,\n  });\n\n  await expect(\n    f\n      .inject({\n        method: `post`,\n        url: `/item`,\n        payload: {\n          id: `e7f7082a-4f16-430d-8c3b-db6b8d4d3e73`,\n          label: `todo`,\n          state: `todo`,\n          dueDateMs: new Date(1337).getTime(),\n        },\n      })\n      .then((res) => res.json()),\n  ).resolves.toEqual({\n    todoItems: [\n      {\n        id: `e7f7082a-4f16-430d-8c3b-db6b8d4d3e73`,\n        label: `todo`,\n        state: `todo`,\n        dueDateMs: new Date(1337).getTime(),\n      },\n    ],\n  });\n\n  await expect(\n    f\n      .inject({\n        method: `put`,\n        url: `/item/1337`,\n      })\n      .then((res) => res.json()),\n  ).resolves.toEqual({\n    error: `Bad Request`,\n    message: `params.id should match format \"uuid\"`,\n    statusCode: 400,\n  });\n});\n"],"mappings":";;AAAA;;AAEAA,IAAI,CAAE,eAAF,EAAkB,YAAY;EAChC,MAAMC,CAAC,GAAG,IAAAC,oCAAA,EAAuB,EAAvB,EAA2B,EAA3B,EAA+B,EAA/B,CAAV;EAEA,MAAMC,MAAM,CACVF,CAAC,CACEG,MADH,CACU;IACNC,MAAM,EAAG,KADH;IAENC,GAAG,EAAG;EAFA,CADV,EAKGC,IALH,CAKSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EALjB,CADU,CAAN,CAOJC,QAPI,CAOKC,OAPL,CAOa;IAAEC,SAAS,EAAE;EAAb,CAPb,CAAN;EASA,MAAMT,MAAM,CACVF,CAAC,CACEG,MADH,CACU;IACNC,MAAM,EAAG,MADH;IAENC,GAAG,EAAG,OAFA;IAGNO,OAAO,EAAE;EAHH,CADV,EAMGN,IANH,CAMSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANjB,CADU,CAAN,CAQJC,QARI,CAQKC,OARL,CAQa;IACjBG,KAAK,EAAG,aADS;IAEjBC,OAAO,EAAG,yCAFO;IAGjBC,UAAU,EAAE;EAHK,CARb,CAAN;EAcA,MAAMb,MAAM,CACVF,CAAC,CACEG,MADH,CACU;IACNC,MAAM,EAAG,MADH;IAENC,GAAG,EAAG,OAFA;IAGNO,OAAO,EAAE;MACPI,EAAE,EAAE;IADG;EAHH,CADV,EAQGV,IARH,CAQSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EARjB,CADU,CAAN,CAUJC,QAVI,CAUKC,OAVL,CAUa;IACjBG,KAAK,EAAG,aADS;IAEjBC,OAAO,EAAG,oCAFO;IAGjBC,UAAU,EAAE;EAHK,CAVb,CAAN;EAgBA,MAAMb,MAAM,CACVF,CAAC,CACEG,MADH,CACU;IACNC,MAAM,EAAG,MADH;IAENC,GAAG,EAAG,OAFA;IAGNO,OAAO,EAAE;MACPI,EAAE,EAAG,sCADE;MAEPC,KAAK,EAAG,MAFD;MAGPC,KAAK,EAAG,MAHD;MAIPC,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAeC,OAAf;IAJJ;EAHH,CADV,EAWGf,IAXH,CAWSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAXjB,CADU,CAAN,CAaJC,QAbI,CAaKC,OAbL,CAaa;IACjBC,SAAS,EAAE,CACT;MACEK,EAAE,EAAG,sCADP;MAEEC,KAAK,EAAG,MAFV;MAGEC,KAAK,EAAG,MAHV;MAIEC,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAeC,OAAf;IAJb,CADS;EADM,CAbb,CAAN;EAwBA,MAAMnB,MAAM,CACVF,CAAC,CACEG,MADH,CACU;IACNC,MAAM,EAAG,KADH;IAENC,GAAG,EAAG;EAFA,CADV,EAKGC,IALH,CAKSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EALjB,CADU,CAAN,CAOJC,QAPI,CAOKC,OAPL,CAOa;IACjBG,KAAK,EAAG,aADS;IAEjBC,OAAO,EAAG,sCAFO;IAGjBC,UAAU,EAAE;EAHK,CAPb,CAAN;AAYD,CA9EG,CAAJ"}