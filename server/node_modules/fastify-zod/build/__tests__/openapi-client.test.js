"use strict";

var _typedJestExpect = require("typed-jest-expect");

var _testOpenapiClient = require("../../test-openapi-client");

var _ = require("..");

var _models = require("./models.fixtures");

var _server = require("./server.fixtures");

test(`openapi-client`, async () => {
  const f = (0, _server.createTestServer)({}, {
    jsonSchemas: (0, _.buildJsonSchemas)(_models.models, {}),
    swaggerOptions: { ..._server.openApiOptions,
      transformSpec: {}
    }
  });
  const basePath = await f.listen(0);

  try {
    const client = new _testOpenapiClient.DefaultApi(new _testOpenapiClient.Configuration({
      basePath,
      fetchApi: require(`node-fetch`)
    }));
    await (0, _typedJestExpect.tExpect)(client.getTodoItems()).resolves.toEqual({
      todoItems: []
    });
    await (0, _typedJestExpect.tExpect)(client.postTodoItem({
      schemaTodoItem: {
        id: `e7f7082a-4f16-430d-8c3b-db6b8d4d3e73`,
        label: `todo`,
        state: _testOpenapiClient.SchemaTodoItemState.Todo,
        dueDateMs: new Date(1337).getTime()
      }
    })).resolves.toEqual({
      todoItems: [{
        id: `e7f7082a-4f16-430d-8c3b-db6b8d4d3e73`,
        label: `todo`,
        state: _testOpenapiClient.SchemaTodoItemState.Todo,
        dueDateMs: new Date(1337).getTime()
      }]
    });
  } finally {
    await f.close();
  }
});
//# sourceMappingURL=openapi-client.test.js.map